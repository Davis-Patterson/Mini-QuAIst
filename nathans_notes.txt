Map Algorithms for different scenes:
Weighted Random Genertation

const getNeighbors = (x, y, mapData) => {
  const neighbors = [];
  if (x > 0) neighbors.push(mapData[y][x - 1]);
  if (x < MAP_SIZE - 1) neighbors.push(mapData[y][x + 1]);
  if (y > 0) neighbors.push(mapData[y - 1][x]);
  if (y < MAP_SIZE - 1) neighbors.push(mapData[y + 1][x]);
  return neighbors;
};

const generateRandomTerrain = () => {
  const terrains = Object.keys(TERRAINS);
  return terrains[Math.floor(Math.random() * terrains.length)];
};

const generateTerrainWithWeight = (x, y, mapData) => {
  const neighbors = getNeighbors(x, y, mapData);
  const terrains = Object.keys(TERRAINS);
  const weightedTerrains = [];
  
  for (const terrain of terrains) {
    let weight = 1;
    
    for (const neighbor of neighbors) {
      if (neighbor === terrain) weight += 100;
    }
    
    for (let i = 0; i < weight; i++) {
      weightedTerrains.push(terrain);
    }
  }
  
  return weightedTerrains[Math.floor(Math.random() * weightedTerrains.length)];
};

